C:\Documents and Settings\ic1002\My Documents\Downloads\Lab5\lab5b.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Tue Oct 30 16:32:32 2012

    1:                                 #include ee3420.inc
ee3420.inc(1): Note A5001: col(6) "EE3420.INC REVISION 10/15/2010"
    1:                                 #MSG "EE3420.INC REVISION 10/15/2010"
ee3420.inc(2): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    2:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
ee3420.inc(3): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    3:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
ee3420.inc(4): Note A5001: col(6) "THIS LIBRARY IS INTENDED FOR USE WITH THE ASM12 ASSEMBLER PROVIDED AS PART OF"
    4:                                 #MSG "THIS LIBRARY IS INTENDED FOR USE WITH THE ASM12 ASSEMBLER PROVIDED AS PART OF"
ee3420.inc(5): Note A5001: col(6) "THE MINIIDE PROGRAM AVAILABLE FROM HTTP://WWW.MGTEK.COM/MINIIDE"
    5:                                 #MSG "THE MINIIDE PROGRAM AVAILABLE FROM HTTP://WWW.MGTEK.COM/MINIIDE"
ee3420.inc(6): Note A5001: col(6) "CONDITIONAL ASSEMBLY AND MACROS MAY NOT FUNCTION IN THE CORRECT MANNER WITH OTHER ASSEMBLERS."
    6:                                 #MSG "CONDITIONAL ASSEMBLY AND MACROS MAY NOT FUNCTION IN THE CORRECT MANNER WITH OTHER ASSEMBLERS."
    7:                                 
    8:                                 #INCLUDE CONSTANTS.INC                  ;USEFUL GLOBAL CONSTANTS
    1:                                 #IFNDEF CONSTANTS_INC
    2:          =00000001              CONSTANTS_INC   EQU 1
CONSTANTS.INC(3): Note A5001: col(6) "CONSTANTS.INC REVISION 08/20/2010"
    3:                                 #MSG "CONSTANTS.INC REVISION 08/20/2010"
CONSTANTS.INC(4): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    4:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
CONSTANTS.INC(5): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    5:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    6:                                 
    7:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
   62:                                 
   63:                                 #ENDIF  
    9:                                 #INCLUDE SYSTEM_SELECT.INC              ;BOARD-SPECIFIC OPTIONS
    1:                                 #IFNDEF SYSTEM_SELECT
    2:          =00000001              SYSTEM_SELECT EQU 1
SYSTEM_SELECT.INC(3): Note A5001: col(6) "SYSTEM_SELECT.INC REVISION 08/06/2010"
    3:                                 #MSG "SYSTEM_SELECT.INC REVISION 08/06/2010"
SYSTEM_SELECT.INC(4): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    4:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
SYSTEM_SELECT.INC(5): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    5:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    6:                                 
    7:                                 #INCLUDE CONSTANTS.INC
    1:                                 #IFNDEF CONSTANTS_INC
   63:                                 #ENDIF  
    8:                                 
    9:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
SYSTEM_SELECT.INC(32): Note A5001: col(6) "NO SYSTEM BOARD SPECIFIED. ASSUMING DRAGON12-PLUS."
SYSTEM_SELECT.INC(33): Note A5001: col(6) "PLEASE NOTE THAT SOME FUNCTIONS SUCH AS SYSTEM SPEED VARY BY SYSTEM BOARD."
SYSTEM_SELECT.INC(34): Note A5001: col(6) "ALSO, PORT AND PERIPHERAL AVAILABILITY VARIES BY SYSTEM BOARD."
  462:                                 
  463:                                 #ENDIF ;SYSTEM_SELECT
   10:                                 #INCLUDE MC9S12_REGISTERS.INC           ;DEFINITIONS OF ALL SYSTEM MEMORY LOCATIONS AND CONSTANTS
    1:                                 #IFNDEF MC9S12REGS
    2:          =00000001              MC9S12REGS      EQU 1
MC9S12_REGISTERS.INC(3): Note A5001: col(6) "MC9S12_REGISTERS.INC REVISION 08/06/2010"
    3:                                 #MSG "MC9S12_REGISTERS.INC REVISION 08/06/2010"
MC9S12_REGISTERS.INC(4): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    4:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
MC9S12_REGISTERS.INC(5): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    5:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    6:                                 
    7:                                 #INCLUDE SYSTEM_SELECT.INC
    1:                                 #IFNDEF SYSTEM_SELECT
  463:                                 #ENDIF ;SYSTEM_SELECT
    8:                                 #INCLUDE CONSTANTS.INC
    1:                                 #IFNDEF CONSTANTS_INC
   63:                                 #ENDIF  
    9:                                 
   10:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
 1489:                                 
 1490:                                 ;* end registers
 1491:                                 #ENDIF  ;MC9S12REGS
   11:                                 #INCLUDE ASCII.INC                      ;DEFINITIONS OF ALL ASCII CONTROL CODES
    1:                                 #IFNDEF ASCII_INC       ;using definition to prevent duplication of equates
    2:          =00000001              ASCII_INC EQU 1
ASCII.INC(3): Note A5001: col(6) "ASCII.INC REVISION 08/06/2010"
    3:                                 #MSG "ASCII.INC REVISION 08/06/2010"
ASCII.INC(4): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    4:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
ASCII.INC(5): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    5:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    6:                                 
    7:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
  183:                                 
  184:                                 #ENDIF          ;#IFNDEF ASCII_INC
   12:                                 #INCLUDE MUSIC_NOTES.INC
    1:                                 #IFNDEF MUSIC_NOTES_INC
    2:          =00000001              MUSIC_NOTES_INC EQU 1
MUSIC_NOTES.INC(3): Note A5001: col(6) "MUSIC_NOTES.INC REVISION 08/06/2010"
    3:                                 #MSG "MUSIC_NOTES.INC REVISION 08/06/2010"
MUSIC_NOTES.INC(4): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    4:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
MUSIC_NOTES.INC(5): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    5:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    6:                                 
    7:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
  265:                                 
  266:                                 #ENDIF  ;;;#IFNDEF MUSIC_NOTES_INC
  267:                                 
   13:                                 #INCLUDE VT100.INC
    1:                                 #IFNDEF VT100_INC
    2:          =00000001              VT100_INC       EQU 1
VT100.INC(3): Note A5001: col(6) "VT100.INC REVISION 09/15/2010"
    3:                                 #MSG "VT100.INC REVISION 09/15/2010"
VT100.INC(4): Note A5001: col(6) "COPYRIGHT 2010 WILLIAM STAPLETON"
    4:                                 #MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
VT100.INC(5): Note A5001: col(6) "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    5:                                 #MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."
    6:                                 
    7:                                 #INCLUDE ASCII.INC
    1:                                 #IFNDEF ASCII_INC       ;using definition to prevent duplication of equates
  184:                                 #ENDIF          ;#IFNDEF ASCII_INC
    8:                                 
    9:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
   10:                                 ;       NOLIST
   11:                                 
   12:                                 VT100_MAKE_VARIABLES MACRO
   13:                                 #IFNDEF VT100_VARS
   14:                                 VT100_VARS EQU 1
   15:                                         JMP NEXT\@
   16:                                 #ENDIF
   17:                                 #IFNDEF VT100_PREFIX
   18:                                 VT100_PREFIX    DC.B ESC,'[',NULL
   19:                                 #ENDIF
   20:                                 #IFNDEF VT100_ATTRIBUTE_STRING
   21:                                 VT100_ATTRIBUTE_STRING DC.B '00000',NULL
   22:                                 #ENDIF
   23:                                 NEXT\@:
   24:                                         ENDM
   25:                                 
   26:                                 VT100_CLEAR_SCREEN MACRO
   27:                                         VT100_MAKE_VARIABLES
   28:                                         PUTS #VT100_PREFIX      
   29:                                         ITOA #2,#VT100_ATTRIBUTE_STRING
   30:                                         PUTS #VT100_ATTRIBUTE_STRING
   31:                                         PUTC #'J'
   32:                                         ENDM
   33:                                 
   34:                                 VT100_HOME MACRO        
   35:                                         VT100_MAKE_VARIABLES
   36:                                         PUTS #VT100_PREFIX      
   37:                                         PUTC #'H'
   38:                                         ENDM
   39:                                 
   40:                                 VT100_CURSOR MACRO ;ROW.COLUMN
   41:                                 #IF \# >=2
   42:                                         VT100_MAKE_VARIABLES
   43:                                         PUTS #VT100_PREFIX      
   44:                                         ITOA \1,#VT100_ATTRIBUTE_STRING
   45:                                         PUTS #VT100_ATTRIBUTE_STRING
   46:                                         PUTC #$3B
   47:                                         ITOA \2,#VT100_ATTRIBUTE_STRING
   48:                                         PUTS #VT100_ATTRIBUTE_STRING
   49:                                         PUTC #'H'
   50:                                 #ENDIF
   51:                                 #IF \# != 2
   52:                                 #MSG "MACRO VT100_CURSOR REQUIRES EXACTLY 2 PARAMETERS WHICH RESOLVE INTO NUMBERS FOR CURSOR ROW AND COLUMN"
   53:                                 #MSG "BOTH ROW AND COLUMN NUMBER BEGIN WITH 1 FOR THE TOP-LEFT CORNER"
   54:                                 #ENDIF
   55:                                         ENDM
   56:                                 
   57:                                 VT100_SAVE_CURSOR MACRO
   58:                                         VT100_MAKE_VARIABLES
   59:                                         PUTS #VT100_PREFIX      
   60:                                         PUTC #'s'
   61:                                         ENDM
   62:                                 
   63:                                 VT100_RESTORE_CURSOR MACRO
   64:                                         VT100_MAKE_VARIABLES
   65:                                         PUTS #VT100_PREFIX      
   66:                                         PUTC #'u'
   67:                                         ENDM
   68:                                 
   69:                                 VT100_UP MACRO ;COUNT
   70:                                         VT100_MAKE_VARIABLES
   71:                                         PUTS #VT100_PREFIX
   72:                                 #IF \# >= 1     
   73:                                         ITOA \1,#VT100_ATTRIBUTE_STRING
   74:                                         PUTS #VT100_ATTRIBUTE_STRING
   75:                                 #ENDIF
   76:                                         PUTC #'A'
   77:                                 #IF \# >= 2
   78:                                 #MSG "MACRO VT100_UP REQUIRES AT MOST 1 PARAMETER WHICH RESOLVE INTO THE NUMBERS OF ROWS TO MOVE"
   79:                                 #MSG "IF NO PARAMETER IS SPECIFIED, THE DEFAULT IS USED (TYPICALLY 1 ROW)"
   80:                                 #ENDIF
   81:                                         ENDM
   82:                                 
   83:                                 VT100_DOWN MACRO ;COUNT
   84:                                         VT100_MAKE_VARIABLES
   85:                                         PUTS #VT100_PREFIX
   86:                                 #IF \# >= 1     
   87:                                         ITOA \1,#VT100_ATTRIBUTE_STRING
   88:                                         PUTS #VT100_ATTRIBUTE_STRING
   89:                                 #ENDIF
   90:                                         PUTC #'B'
   91:                                 #IF \# >= 2
   92:                                 #MSG "MACRO VT100_DOWN REQUIRES AT MOST 1 PARAMETER WHICH RESOLVE INTO THE NUMBERS OF ROWS TO MOVE"
   93:                                 #MSG "IF NO PARAMETER IS SPECIFIED, THE DEFAULT IS USED (TYPICALLY 1 ROW)"
   94:                                 #ENDIF
   95:                                         ENDM
   96:                                 
   97:                                 VT100_RIGHT MACRO ;COUNT
   98:                                         VT100_MAKE_VARIABLES
   99:                                         PUTS #VT100_PREFIX
  100:                                 #IF \# >= 1     
  101:                                         ITOA \1,#VT100_ATTRIBUTE_STRING
  102:                                         PUTS #VT100_ATTRIBUTE_STRING
  103:                                 #ENDIF
  104:                                         PUTC #'C'
  105:                                 #IF \# >= 2
  106:                                 #MSG "MACRO VT100_RIGHT REQUIRES AT MOST 1 PARAMETER WHICH RESOLVES INTO THE NUMBERS OF COLUMNS TO MOVE"
  107:                                 #MSG "IF NO PARAMETER IS SPECIFIED, THE DEFAULT IS USED (TYPICALLY 1 COLUMN)"
  108:                                 #ENDIF
  109:                                         ENDM
  110:                                 
  111:                                 VT100_LEFT MACRO ;COUNT
  112:                                         VT100_MAKE_VARIABLES
  113:                                         PUTS #VT100_PREFIX
  114:                                 #IF \# >= 1     
  115:                                         ITOA \1,#VT100_ATTRIBUTE_STRING
  116:                                         PUTS #VT100_ATTRIBUTE_STRING
  117:                                 #ENDIF
  118:                                         PUTC #'D'
  119:                                 #IF \# >= 2
  120:                                 #MSG "MACRO VT100_LEFT REQUIRES AT MOST 1 PARAMETER WHICH RESOLVES INTO THE NUMBERS OF COLUMNS TO MOVE"
  121:                                 #MSG "IF NO PARAMETER IS SPECIFIED, THE DEFAULT IS USED (TYPICALLY 1 COLUMN)"
  122:                                 #ENDIF
  123:                                         ENDM
  124:                                 
  125:          =00000000              VT100_DEFAULT   EQU 0
  126:          =00000001              VT100_BRIGHT    EQU 1
  127:          =00000002              VT100_DIM               EQU 2
  128:          =00000004              VT100_UNDERLINE EQU 4
  129:          =00000005              VT100_BLINK     EQU 5
  130:          =00000007              VT100_INVERT    EQU 7
  131:          =00000008              VT100_HIDDEN    EQU 8
  132:          =0000001E              VT100_FOREGROUND_PREFIX EQU 30
  133:          =00000028              VT100_BACKGROUND_PREFIX EQU 40
  134:          =00000000              VT100_BLACK     EQU 0
  135:          =00000001              VT100_RED               EQU 1
  136:          =00000002              VT100_GREEN     EQU 2
  137:          =00000003              VT100_YELLOW    EQU 3           ;YELLOW=RED+GREEN               
  138:          =00000004              VT100_BLUE              EQU 4
  139:          =00000005              VT100_MAGENTA   EQU 5           ;MAGENTA=BLUE+RED       
  140:          =00000006              VT100_CYAN              EQU 6           ;CYAN=BLUE+GREEN                
  141:          =00000007              VT100_WHITE     EQU 7           ;WHITE=BLUE+GREEN+RED   
  142:                                 
  143:                                 
  144:                                 VT100_TEXT_ATTRIBUTE MACRO ;PARAMETERS
  145:                                         VT100_MAKE_VARIABLES
  146:                                         PUTS #VT100_PREFIX
  147:                                 #IF \# = 0
  148:                                         ITOA #VT100_DEFAULT,#VT100_ATTRIBUTE_STRING
  149:                                         PUTS #VT100_ATTRIBUTE_STRING
  150:                                 #ENDIF
  151:                                 #IF \# >=1      
  152:                                         ITOA \1,#VT100_ATTRIBUTE_STRING
  153:                                         PUTS #VT100_ATTRIBUTE_STRING
  154:                                 #ENDIF
  155:                                 #IF \# >=2
  156:                                         PUTC #$3B       
  157:                                         ITOA \2,#VT100_ATTRIBUTE_STRING
  158:                                         PUTS #VT100_ATTRIBUTE_STRING
  159:                                 #ENDIF
  160:                                 #IF \# >=3
  161:                                         PUTC #$3B       
  162:                                         ITOA \3,#VT100_ATTRIBUTE_STRING
  163:                                         PUTS #VT100_ATTRIBUTE_STRING
  164:                                 #ENDIF
  165:                                 #IF \# >=4
  166:                                         PUTC #$3B       
  167:                                         ITOA \4,#VT100_ATTRIBUTE_STRING
  168:                                         PUTS #VT100_ATTRIBUTE_STRING
  169:                                 #ENDIF
  170:                                 #IF \# >=5
  171:                                         PUTC #$3B       
  172:                                         ITOA \5,#VT100_ATTRIBUTE_STRING
  173:                                         PUTS #VT100_ATTRIBUTE_STRING
  174:                                 #ENDIF
  175:                                 #IF \# >=6
  176:                                         PUTC #$3B       
  177:                                         ITOA \6,#VT100_ATTRIBUTE_STRING
  178:                                         PUTS #VT100_ATTRIBUTE_STRING
  179:                                 #ENDIF
  180:                                 #IF \# >=7
  181:                                         PUTC #$3B       
  182:                                         ITOA \7,#VT100_ATTRIBUTE_STRING
  183:                                         PUTS #VT100_ATTRIBUTE_STRING
  184:                                 #ENDIF
  185:                                         PUTC #'m'
  186:                                 #IF \# =0 | \# > 7
  187:                                 #MSG "MACRO VT100_TEXT_ATTRIBUTE REQUIRES UP TO 7 PARAMETERS WHICH RESOLVE INTO VT100 TEXT ATTRIBUTES"
  188:                                 #MSG "EXAMPLE ATTRIBUTES ARE VT100_BRIGHT, VT100_UNDERLINE, AND VT100_BLINK"
  189:                                 #MSG "EXAMPLE TO SET BACKGROUND COLOR USE: VT100_TEXT_ATTRIBUTE #(VT100_BACKGROUND_PREFIX+VT100_RED)"
  190:                                 #MSG "EXAMPLE TO SET FOREGROUND COLOR USE: VT100_TEXT_ATTRIBUTE #(VT100_FOREGROUND_PREFIX+VT100_GREEN)"
  191:                                 #MSG "VT100_DEFAULT REMOVES ALL OTHER ATTRIBUTES, INCLUDING TEXT COLOR"
  192:                                 #MSG "MORE THAN 7 PARAMETERS AT A TIME IS DISALLOWED"
  193:                                 #MSG "PROVIDING 0 PARAMETERS IS EQUIVALENT TO SETTING VT100_DEFAULT"
  194:                                 #ENDIF
  195:                                         ENDM
  196:                                 
  197:                                 
  198:                                 
  199:                                 
  200:                                 
  201:                                 
  202:                                 
  203:                                 ;THE FOLLOWING LINE RESTORES LISTING FOR CODE OUTSIDE OF THIS LIBRARY
  205:                                 
  206:                                 #ENDIF  
   14:                                 
   15:                                 ;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
    2:                                 
    3:          =00001000                      org $1000
    4:     1000 00                     Num1 dc.b 0
    5:     1001 00                     Num2 dc.b 0
    6:     1002 00                     Int1 dc.b 0
    7:     1003 00                     Int2 dc.b 0
    8:     1004 00                     OutNum1 dc.b 0
    9:     1005 00                     OutNum2 dc.b 0
   10:     1006 00                     Opperand dc.b 0
   11:     1007 00                     Total dc.b 0
   12:     1008 45 6E 74 65 72 20      Prompt1 DC.B "Enter 1st Number", CR,LF, NULL
           100E 31 73 74 20 4E 75 
           1014 6D 62 65 72 0D 0A 
           101A 00 
   13:     101B 45 6E 74 65 72 20      Prompt2 DC.B "Enter 2nd Number", CR,LF, NULL
           1021 32 6E 64 20 4E 75 
           1027 6D 62 65 72 0D 0A 
           102D 00 
   14:                                 
   15:                                 
   16:     102E 3F 06 5B 4F 66 6D      DIGIT_PATTERN DC.B $3f,$06,$5b,$4f,$66,$6d,$7d,$07,$7f,$6f,$77,$7c,$39,$5e,$79,$71
           1034 7D 07 7F 6F 77 7C 
           103A 39 5E 79 71 
   17:                                 ;                    0,  1,  2,  3,  4,  5,  6,  7, 8,  9,  A,  b,  C,  d,  E,  F
   18:                                 
   19:                                 ;digit_delay equ 10
   20:                                 
   21:                                 #ifndef digit_delay
   22:          =00000001              digit_delay equ 1
   23:                                 #endif
   24:                                 
   25:          =00000001              debug equ 1
   26:                                 
   27:          =00002000                      org $2000
   28:     2000                        main:
   29:     2000 1C 026A 02                     bset ddrj,bit1          ;output
   30:     2004 1C 0268 02                     bset portj,bit1         ;turns off discrete leds
   31:                                 
   32:     2008 1C 025A 0F                     bset ddrp,$0f           ;output pins 
   33:     200C 1C 0258 0F                     bset portp,$0f          ;turn off all 7-seg
   34:                                 
   35:     2010 4C 03 FF                       bset ddrb,$ff
   36:                                 
   37:     2013                        loop0:  
   38:                                         LCD_SETUP                               ;INITIALIZE THE LCD SCREEN
   39:                                         LCD_CURSOR 0,0                  ;MOVE THE LCD CURSOR TO ROW 0 COLUMN 0
   40:                                         PUTS_LCD #Prompt1
   41:                                         GETC_KEYPAD Num1
   42:                                 
   43:     2033 B6 1000                loop1:  ldaa Num1       ;msb
   44:     2036 81 2A                          cmpa #'*'
   45:     2038 26 04                          bne check1
   46:     203A 86 0E                          ldaa #14
   47:     203C 20 10                          bra out1
   48:     203E 81 23                  check1: cmpa #'#'
   49:     2040 26 04                          bne check2
   50:     2042 86 0F                          ldaa #15
   51:     2044 20 08                          bra out1
   52:     2046 80 30                  check2: suba #$30
   53:     2048 81 09                          cmpa #9
   54:     204A 2F 02                          ble out1
   55:     204C 80 07                          suba #7
   56:     204E                        out1:   
   57:     204E 7A 1002                        STAA Int1
   58:     2051 B7 05                          tfr a,x                 ;0<= x <= 15
   59:     2053 A6 E2 102E                     ldaa digit_pattern,x    ;a has 7-segment pattern for 0-9,A-F
   60:     2057 1D 0258 08                     bclr portp,bit3         ;enable leftmost digit
   61:     205B 5A 01                          staa portb              ;output 7-segment pattern
   62:     205D DD 0A                          LDY 10
   63:     205F                        Display1:
   64:                                         delay_by_ms #digit_delay
   65:     2068 04 36 F4                       DBNE Y, Display1
   66:     206B 1C 0258 08                     bset portp,bit3
   67:     206B                        loop2:  GETC_KEYPAD Opperand
   68:     2078 B6 1006                        ldaa Opperand           ; one right of msb
   69:     207B 81 2A                          cmpa #'*'
   70:     207D 27 06                          beq loop3
   71:     207F 81 41                          cmpa #'A'
   72:     2081 27 02                          beq loop3
   73:     2083 20 EA                          bra loop2
   74:     2085                        loop3:  
   75:                                         LCD_SETUP                               ;INITIALIZE THE LCD SCREEN
   76:                                         LCD_CURSOR 0,0                  ;MOVE THE LCD CURSOR TO ROW 0 COLUMN 0
   77:                                         PUTS_LCD #Prompt2
   78:                                         GETC_KEYPAD Num2
   79:     20A5 B6 1001                        ldaa Num2               ; one right of msb
   80:     20A8 81 2A                          cmpa #'*'
   81:     20AA 26 04                          bne check1b
   82:     20AC 86 0E                          ldaa #14
   83:     20AE 20 10                          bra out3
   84:     20B0 81 23                  check1b:cmpa #'#'
   85:     20B2 26 04                          bne check2b
   86:     20B4 86 0F                          ldaa #15
   87:     20B6 20 08                          bra out3
   88:     20B8 80 30                  check2b: suba #$30
   89:     20BA 81 09                          cmpa #9
   90:     20BC 2F 02                          ble out3
   91:     20BE 80 07                          suba #7
   92:     20C0                        out3:   
   93:     20C0 7A 1003                        STAA Int2
   94:     20C3 B7 05                          tfr a,x                 ;0<= x <= 15
   95:     20C5 A6 E2 102E                     ldaa digit_pattern,x    ;a has 7-segment pattern for 0-9,A-F
   96:     20C9 1D 0258 08                     bclr portp,bit3         ;enable leftmost digit
   97:     20CD 5A 01                          staa portb              ;output 7-segment pattern
   98:     20CF DD 0A                          LDY 10
   99:     20D1                        Display2:
  100:                                         delay_by_ms #digit_delay
  101:     20DA 04 36 F4                       DBNE Y, Display2
  102:     20DD 1C 0258 08                     bset portp,bit3
  103:                                 
  104:     20E1 B6 1006                        ldaa Opperand           ; one right of msb
  105:     20E4 81 2A                          cmpa #'*'
  106:     20E6 26 0B                          bne addition
  107:     20E8                        multiply:
  108:     20E8 87                             CLRA
  109:     20E9 C7                             CLRB
  110:     20EA B6 1002                        LDAA Int1
  111:     20ED F6 1003                        LDAB Int2
  112:     20F0 12                             MUL
  113:     20F1 20 08                          BRA out4
  114:     20F3                        addition:
  115:     20F3 87                             CLRA
  116:     20F4 C7                             CLRB
  117:     20F5 F6 1003                        LDAB Int2
  118:     20F8 FB 1002                        ADDB Int1
  119:                                 
  120:     20FB                        out4:   
  121:     20FB 59                             LSLD
  122:     20FC 59                             LSLD
  123:     20FD 59                             LSLD
  124:     20FE 59                             LSLD
  125:     20FF 54                             LSRB
  126:     2100 54                             LSRB
  127:     2101 54                             LSRB
  128:     2102 54                             LSRB
  129:     2103 7A 1004                        STAA OutNum1
  130:     2106 7B 1005                        STAB OutNum2
  131:     2109 DD 0A                          LDY 10
  132:     210B                        DISPLAY:
  133:     210B 87                             CLRA
  134:     210C B6 1004                        LDAA OutNum1
  135:     210F B7 05                          tfr a,x
  136:     2111 A6 E2 102E                     ldaa digit_pattern,x    ;a has 7-segment pattern for 0-9,A-F
  137:     2115 1D 0258 04                     bclr portp,bit2         ;enable leftmost digit
  138:     2119 5A 01                          staa portb              ;output 7-segment pattern
  139:                                         delay_by_ms #digit_delay
  140:     2124 1C 0258 04                     bset portp,bit2
  141:     2128 87                             CLRA
  142:     2129 B6 1005                        LDAA OutNum2
  143:     212C B7 05                          tfr a,x
  144:     212E A6 E2 102E                     ldaa digit_pattern,x    ;a has 7-segment pattern for 0-9,A-F
  145:     2132 1D 0258 08                     bclr portp,bit3         ;enable leftmost digit
  146:     2136 5A 01                          staa portb              ;output 7-segment pattern
  147:                                         delay_by_ms #digit_delay
  148:     2141 1C 0258 08                     bset portp,bit3
  149:     2145 04 36 C3                       DBNE Y, DISPLAY
  150:     2148 1820 FEC7                      lbra loop0
  151:                                 
  152:     214C 3D                             rts

Symbols:
__delay_ms                      *0000807c
__getc_keypad                   *00008020
__lcd_setup                     *00008024
__putc_lcd_command              *00008030
__puts_lcd                      *0000802c
addition                        *000020f3
atd0stat                        *00000086
atd1stat                        *00000126
bit0                            *00000001
bit1                            *00000002
bit10                           *00000400
bit11                           *00000800
bit12                           *00001000
bit2                            *00000004
bit3                            *00000008
bit4                            *00000010
bit5                            *00000020
bit6                            *00000040
bit7                            *00000080
bit8                            *00000100
bit9                            *00000200
c128                            *00000006
c32                             *00000005
check1                          *0000203e
check1b                         *000020b0
check2                          *00002046
check2b                         *000020b8
cr                              *0000000d
dataend                         *00001ffe
datastart                       *00001000
dbug12                          *00000001
ddrb                            *00000003
ddrj                            *0000026a
ddrp                            *0000025a
dg256                           *00000002
digit_delay                     *00000001
digit_pattern                   *0000102e
display                         *0000210b
display1                        *0000205f
display2                        *000020d1
dj256                           *00000004
dp256                           *00000001
dragon12                        *00000001
dragon12plus                    *00000002
dragonfly12                     *00000009
dragonfly12plus                 *0000000a
dragonflybot                    *0000000b
dt256                           *00000003
eighth                          *000000c0
false                           *00000000
half                            *00000300
int1                            *00001002
int2                            *00001003
lcd_cmd__00002                  *00000080
lcd_cmd__00009                  *00000080
lcd_col__00002                  *00000000
lcd_col__00009                  *00000000
lcd_columns                     *00000010
lcd_row__00002                  *00000000
lcd_row__00009                  *00000000
lf                              *0000000a
library_page                    *0000003d
loop0                           *00002013
loop2                           *0000206f
loop3                           *00002085
memsiz0                         *0000001c
microdragon                     *00000007
minidragon                      *00000003
minidragonplus                  *00000004
nanocore12                      *0000000c
nanocore12dx                    *0000000d
nanocore12max                   *0000000e
null                            *00000000
num1                            *00001000
num2                            *00001001
octave1_ab                      *0000967d
octave1_b                       *0000fd18
octave1_c                       *0000eee4
octave1_d                       *0000d4d3
octave1_db                      *0000e17b
octave1_e                       *0000bd9b
octave1_eb                      *0000c8e1
octave1_f                       *0000b2f7
octave1_g                       *00009f70
octave1_gb                      *0000a8eb
octave2_a                       *00008e0b
octave2_ab                      *00004b3e
octave2_b                       *00007e8c
octave2_bb                      *00008612
octave2_c                       *00007772
octave2_d                       *00006a69
octave2_db                      *000070bd
octave2_e                       *00005ecd
octave2_eb                      *00006470
octave2_f                       *0000597b
octave2_g                       *00004fb8
octave2_gb                      *00005475
octave3_a                       *00004705
octave3_ab                      *0000259f
octave3_b                       *00003f46
octave3_bb                      *00004309
octave3_c                       *00003bb9
octave3_d                       *00003534
octave3_db                      *0000385e
octave3_e                       *00002f66
octave3_eb                      *00003238
octave3_f                       *00002cbd
octave3_g                       *000027dc
octave3_gb                      *00002a3a
octave4_a                       *00002382
octave4_ab                      *000012cf
octave4_b                       *00001fa3
octave4_bb                      *00002184
octave4_c                       *00001ddc
octave4_d                       *00001a9a
octave4_db                      *00001c2f
octave4_e                       *000017b3
octave4_eb                      *0000191c
octave4_f                       *0000165e
octave4_g                       *000013ee
octave4_gb                      *0000151d
octave5_a                       *000011c1
octave5_ab                      *00000967
octave5_b                       *00000fd1
octave5_bb                      *000010c2
octave5_c                       *00000eee
octave5_d                       *00000d4d
octave5_db                      *00000e17
octave5_e                       *00000bd9
octave5_eb                      *00000c8e
octave5_f                       *00000b2f
octave5_g                       *000009f7
octave5_gb                      *00000a8e
octave6_a                       *000008e0
octave6_ab                      *000004b3
octave6_b                       *000007e8
octave6_bb                      *00000861
octave6_c                       *00000777
octave6_d                       *000006a6
octave6_db                      *0000070b
octave6_e                       *000005ec
octave6_eb                      *00000647
octave6_f                       *00000597
octave6_g                       *000004fb
octave6_gb                      *00000547
octave7_a                       *00000470
octave7_ab                      *00000259
octave7_b                       *000003f4
octave7_bb                      *00000430
octave7_c                       *000003bb
octave7_d                       *00000353
octave7_db                      *00000385
octave7_e                       *000002f6
octave7_eb                      *00000323
octave7_f                       *000002cb
octave7_g                       *0000027d
octave7_gb                      *000002a3
octave8_a                       *00000238
octave8_ab                      *0000012c
octave8_b                       *000001fa
octave8_bb                      *00000218
octave8_c                       *000001dd
octave8_d                       *000001a9
octave8_db                      *000001c2
octave8_e                       *0000017b
octave8_eb                      *00000191
octave8_f                       *00000165
octave8_g                       *0000013e
octave8_gb                      *00000151
octave9_a                       *0000011c
opperand                        *00001006
out1                            *0000204e
out3                            *000020c0
out4                            *000020fb
outnum1                         *00001004
outnum2                         *00001005
pacn1                           *00000064
pacn3                           *00000062
partidh                         *0000001a
porta                           *00000000
portb                           *00000001
porte                           *00000008
portj                           *00000268
portk                           *00000032
portp                           *00000258
prompt1                         *00001008
prompt2                         *0000101b
quarter                         *00000180
regbase                         *00000000
sc0bdh                          *000000c8
sci0bdh                         *000000c8
sci0cr1                         *000000ca
sci0drh                         *000000ce
sci0sr1                         *000000cc
sci1bdh                         *000000d0
sci1cr1                         *000000d2
sci1drh                         *000000d6
sci1sr1                         *000000d4
serialmonitor                   *00000002
serialmonitorx                  *00000003
sixteenth                       *00000060
spider12                        *00000005
system_board                    *00000002
system_cpu                      *00000002
system_os                       *00000001
thirtysecond                    *00000030
thunderbird12                   *00000006
tinydragon                      *00000008
tmsk1                           *0000004c
tmsk2                           *0000004d
true                            *00000001
tscr                            *00000046
ubug12                          *00000002
ubug12x                         *00000003
vectortable                     *00003e00
whole                           *00000600

